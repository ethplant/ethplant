{"version":3,"sources":["config.js","EthContext.js","TopAlert.js","useTopAlert.js","SmallLoadingBar.js","util.js","Navigation.js","LoadingBar.js","PlantFeature.js","PlantGridUnit.js","LoadingMessage.js","PlantGrid.js","ts.js","OverlayPhoto.js","Album.js","ControlPanel.js","Plant.js","PageTail.js","usePageTracking.js","App.js","serviceWorker.js","index.js"],"names":["EthProvider","VideoPrefix","VideoServer","login_args","dataLayer","event","dataLayerName","ethLink","provider","signer","nft","account","noneAccountFetch","this","ethers","providers","JsonRpcProvider","Contract","PlantNFT","abi","appSetNft","initEth","appSetAccount","a","console","log","detectEthereumProvider","resProvider","window","ethereum","on","accounts","undefined","length","login","Web3Provider","String","Error","getSigner","getAddress","TagManager","EthContext","React","createContext","TopAlert","memo","children","closeModal","domEl","document","getElementById","ReactDOM","createPortal","Alert","variant","onClose","dismissible","style","marginBottom","useTopAlert","useState","isVisible","setIsVisible","msg","setMsg","hide","showMessage","scrollTo","setTimeout","RenderTopAlert","Fragment","SmallLoadingBar","className","playRemote","name","videoId","pc","RTCPeerConnection","sdpSemantics","addTransceiver","direction","ontrack","el","createElement","track","kind","srcObject","streams","autoplay","controls","muted","setAttribute","appendChild","createOffer","then","offer","setLocalDescription","fetch","method","headers","body","JSON","stringify","res","json","setRemoteDescription","catch","alert","Navigation","loginLoading","setLoginLoading","useContext","showLoginFail","LoginFail","message","scrollIntoView","behavior","block","addr","loginHtml","push","key","shortAddr","substring","Nav","Link","onClick","loginEth","Navbar","collapseOnSelect","expand","bg","padding","Brand","as","to","fontSize","Toggle","aria-controls","Collapse","id","goContact","LoadingBar","props","show","type","color","height","width","l","PlantFeature","feature","setFeature","useEffect","jsonURL","result","error","fetchFeature","featureHtml","liKey","featureUnit","library","add","faEye","PlantGridUnit","priceHtml","setName","owner","setOwner","price","setPrice","listSell","setListSell","listSellPrice","setListSellPrice","changeRow","setChangeRow","isLoading","setIsLoading","setPC","showFail","ErrorBox","tokenId","buyNFT","buy","value","once","i_tokenId","parseInt","ownerOf","own","utils","parseEther","toString","priceWei","setForSale","cancelSale","nftName","getSale","close","get_pc","step","min","onChange","target","Button","sellNFT","cancelSell","ethHtml","formatUnits","plantPath","icon","LoadingMessage","src","alt","PlantGrid","totalSupply","setTotalSupply","i","childCall","items","parent","includes","ts2time","unixTs","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","ts2date","mon","getMonth","day","getDate","getFullYear","OverlayPhoto","current","setCurrent","preHtml","handlePrevious","nextHtml","handleNext","handleClose","description","prefix","suffix","Album","forwardRef","ref","photoTsAry","setPhotoTsAry","setUpdateTs","showOverlayPhoto","setShowOverlayPhoto","photoCurrentTs","setPhotoCurrentTs","foucusImgId","setFocusImgId","showPhoto","phototTs","split","tsAry","fSplit","ts","sort","b","fetchPhotoList","elId","offsetPosition","getBoundingClientRect","top","scrollToTargetAdjusted","useImperativeHandle","addPhoto","newPhoto","dateStr","hasOwnProperty","imgTs","newArray","concat","cleanValue","now","tmpDatePhotoDic","preDate","datePhotoAry","NaN","datePhotosHtml","photoUrl","photoCurrentTsIdx","indexOf","timezone","datetime","Intl","DateTimeFormat","resolvedOptions","timeZone","ts2datetime","currentUrl","preFunc","nextFunc","displayName","useStyles","makeStyles","theme","root","margin","spacing","powerMarks","label","durationMarks","ControlPanel","classes","fanPower","setFanPower","fanDuration","setFanDuration","ledBrightness","setLEDBrightness","ledOn","setLEDOn","pumpDuration","setPumpDuration","detail","controlHandle","Slider","defaultValue","aria-labelledby","marks","valueLabelDisplay","newValue","Number","max","button","sendFan","checked","e","sendLED","sendPump","faCamera","faWater","Plant","setTokenId","albumRef","useRef","useParams","signMessage","snapshotSign","postUrl","rawResponse","albumResult","controlType","nftID","nftId","goWateringArea","takePhoto","PageTail","href","rel","usePageTracking","location","useLocation","pathname","search","tagManagerArgs","page","App","setNft","setAccount","Provider","exact","path","Boolean","hostname","match","initialize","gtmId","render","StrictMode","basename","process","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6083821.chunk.js","sourcesContent":["export const EthProvider = \"https://rinkeby.infura.io/v3/3a52c6e97b6c46d6a43b0a95ec99f19b\";//\"http://localhost:7545\"; // //\"http://192.168.0.117:7545\";\nexport const VideoServer = \"http://localhost:8443\"; //\"https://v.ethplant.com\"; //\"http://192.168.0.117:8443\"; \"https://v.ethplant.com\"\nexport const VideoPrefix = VideoServer + \"/@\";\n// ETH\nexport const contractAddress ='0x3ED33cb2373C59958d37ACDC2869F3E2c131a019';\n// export const contractAddress = '0xBCa4cE7CcF8D70332fdb5717f39f2971c8109874';\nexport function GetEthNetName(){ \n    if (EthProvider.includes(\"mainnet.\")){\n        return \"Mainnet\"\n    }else if (EthProvider.includes(\"rinkeby.\")){\n        return \"Rinkeby\"\n    }else if (EthProvider.includes(\"ropsten.\")){\n        return \"Ropsten\"\n    }else if (EthProvider.includes(\"localhost\")){\n        return \"localhost\"\n    }else{\n        return \"strange\"\n    }\n}","import React from \"react\";\nimport { ethers } from \"ethers\";\nimport PlantNFT from \"./contracts/PlantNFT.json\";\nimport {EthProvider, contractAddress} from \"./config.js\"\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport TagManager from 'react-gtm-module'\nconst login_args = {\n  dataLayer: {\n    event: \"login_eth\"\n    /* can pass more variables here if needed */\n  },\n  dataLayerName: \"PageDataLayer\"\n};\n\n\nexport const ethLink = {\n    provider : null, //new ethers.providers.JsonRpcProvider(EthProvider),\n    signer : null, \n    nft: null,\n    account: '',\n    noneAccountFetch: function(){\n        this.provider = new ethers.providers.JsonRpcProvider(EthProvider);\n        this.nft = new ethers.Contract(contractAddress, PlantNFT.abi, this.provider);\n        this.appSetNft(this.nft);\n    },\n    initEth : async function(appSetAccount, appSetNft) {\n        this.appSetAccount = appSetAccount;\n        this.appSetNft = appSetNft;\n        console.log('in chkProvider()!');\n        this.noneAccountFetch();\n            \n        let resProvider = await detectEthereumProvider(false, false, 2); //.then( resProvider =>{\n        if (resProvider) {\n            // From now on, this should always be true:\n            // resProvider === window.ethereum\n            window.ethereum.on('accountsChanged', (accounts) => {\n                console.log(\"accounts:\" );\n                console.log(accounts);\n                if (accounts !== undefined && accounts.length>0){\n                    this.login(resProvider);\n                }\n            });\n        }\n    },\n    login: async function(resProvider) {\n        try {\n            console.log(\"resProvider\");\n            console.log(resProvider);\n            if (resProvider===undefined){\n                console.log(\"in resProvider===undefined\");\n                const provider = await detectEthereumProvider(false, false, 2);\n                if (provider) {\n                // From now on, this should always be true:\n                // provider === window.ethereum\n                    this.provider = new ethers.providers.Web3Provider(provider);\n                    window.ethereum.on('accountsChanged', (accounts) => {\n                        console.log(\"accounts:\" + String(accounts));\n                        // this.login();\n                        if (accounts !== undefined && accounts.length>0){\n                            this.login();\n                        }\n                    });\n                } else {\n                    console.log('Please install MetaMask!');\n                    throw new Error('You don\\'t have MetaMask, please install it!'); \n                }\n            }else{\n                this.provider = new ethers.providers.Web3Provider(resProvider);\n            }\n            \n            // console.log(\"this.provider:\");\n            // console.log(this.provider);\n            \n            \n            this.signer = this.provider.getSigner();\n            this.account = await this.signer.getAddress();\n            this.nft = new ethers.Contract(contractAddress, PlantNFT.abi, this.signer);\n\n            this.appSetAccount(this.account);\n            this.appSetNft(this.nft);\n\n            console.log(\"before login_args\")\n            console.log(login_args);\n            // TagManager.dataLayer(login_args);\n            TagManager.dataLayer({\n                dataLayer: {\n                    event: \"login_eth\"\n                }\n            })\n            \n            return this.account;\n        } catch (e) {\n            // console.log(e.name + ': ' + e.message);\n            throw e;\n        }\n        \n    },\n\n};\n  \nexport const EthContext = React.createContext();\n  ","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Alert from 'react-bootstrap/Alert';\n// type Props = {\n//   children: React.ReactChild\n//   closeModal: () => void\n// }\n\nconst TopAlert = React.memo(({ children, closeModal }: Props) => {\n// const Modal = () => {\n  const domEl = document.getElementById('top-alert')\n\n  if (!domEl) return null\n  \n  // This is where the magic happens -> our modal div will be rendered into our 'modal-root' div, no matter where we\n  // use this component inside our React tree\n  return ReactDOM.createPortal(\n    // <div>\n    //   <button onClick={closeModal}>Close</button>\n    //   {children}\n    // </div>,\n    <Alert variant=\"danger\" onClose={closeModal} dismissible style={{marginBottom: 0}} >\n      {/* <Alert.Heading>Oh snap! You got an error!</Alert.Heading> */}\n       {children}\n    </Alert>,\n    domEl\n  )\n});\n\nexport default TopAlert;","import React, { useState } from 'react'\n\nimport TopAlert from './TopAlert.js'\n\n// Renders a modal to the modal root and handles the visibility state\n// of this modal.\n//\n// NOTE: Each modal you want to render should use a separate hook!!!\n// Otherwise your modals will share their visibility state which might lead\n// to overlapping and unclosable elements.\nexport const useTopAlert = () => {\n  const [isVisible, setIsVisible] = useState(false)\n  const [msg, setMsg] = useState(\"\")\n  \n  const showMessage = (msg) => {\n    window.scrollTo(0, 0);\n    setIsVisible(true);\n    setMsg(msg);\n    setTimeout(function() {\n      hide();\n    }, 5000);\n  };\n  const hide = () => {\n    setIsVisible(false)\n  }\n  \n  // const RenderTopAlert = ({ children }: { children: React.ReactChild }) => (\n  //   <React.Fragment>\n  //     {isVisible && <TopAlert closeModal={hide}>{msg}</TopAlert>}\n  //   </React.Fragment>\n  // )\n  const RenderTopAlert = () => (\n    <React.Fragment>\n      {isVisible && <TopAlert closeModal={hide}>{msg}</TopAlert>}\n    </React.Fragment>\n  )\n\n  return {\n    showMessage,\n    hide,\n    RenderTopAlert,\n  }\n}","import React from 'react';\nimport \"./css/loading-bar.css\"\n\nexport default function SmallLoadingBar() {\n// export default function SmallLoadingBar = (props) => {\n\n    return(\n        <div className=\"loader-container\">\n            <div className=\"loader-bar\"></div>\n            <div className=\"loader-bar\"></div>\n            <div className=\"loader-bar\"></div>\n            <div className=\"loader-bar\"></div>\n        </div>\n    );\n};\n\n","import {VideoPrefix} from \"./config.js\" \n\nexport function playRemote(name, videoId){\n    if (name==='' || name ===undefined){\n        return;\n    }\n    let pc = new RTCPeerConnection({ sdpSemantics : \"unified-plan\" })\n    // let pc = new RTCPeerConnection ({ sdpSemantics : \"plan-b\" });\n    // pc.addTransceiver('video')\n    // pc.addTransceiver('video')\n    pc.addTransceiver('video', {direction: \"recvonly\"})\n\n    pc.ontrack = function (event) {\n        var el = document.createElement(event.track.kind)\n        el.srcObject = event.streams[0]\n        el.autoplay = true\n        el.controls = true\n        el.muted = true\n        el.setAttribute('autoplay', '');\n        el.setAttribute('muted', '');\n        el.setAttribute('playsInline', '');\n\n        el.className = \"videoFull\"\n        // document.getElementById(name + 'Video').appendChild(el)\n        document.getElementById(videoId).appendChild(el)\n    }\n\n    pc.createOffer()\n    .then(offer => {\n        pc.setLocalDescription(offer)\n        // console.log(\"offer:\");\n        // console.log(JSON.stringify(offer));\n        return fetch(VideoPrefix + name +'/video', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(offer)\n        })\n    })\n    .then(res => {\n        console.log(`res:`);\n        console.log(res);\n        return res.json();\n    })\n    .then(res => pc.setRemoteDescription(res))\n    .catch(alert)\n\n    return pc;\n}\n\n\nexport function shortAddress(addr){\n    return  addr.substring(0,6) + \"...\" + addr.substring(addr.length-4, addr.length);\n}\n\nexport function scrollToTargetAdjusted(elId){\n    var element = document.getElementById(elId);\n    var headerOffset = 50;\n    // console.log(\"element\");\n    // console.log(element.getBoundingClientRect());\n\n    var elementPosition = element.getBoundingClientRect().top;\n    var offsetPosition = elementPosition - headerOffset;\n\n    window.scrollTo({\n         top: offsetPosition,\n         behavior: \"smooth\"\n    });\n}\n/*\nasync function playRemote(name){\n    let pc = new RTCPeerConnection()\n    pc.addTransceiver('video')\n\n    pc.ontrack = function (event) {\n        var el = document.createElement(event.track.kind)\n        el.srcObject = event.streams[0]\n        el.autoplay = true\n        el.controls = true\n        el.muted = true\n\n        document.getElementById(name + 'Video').appendChild(el)\n    }\n\n\n\n    let offer =  await pc.createOffer()\n    l(\"offer:\" + JSON.stringify(offer));\n    const postUrl = \"http://localhost:8080/@\" + name + \"/video\"; // \"/photo/take\";//name + \"/video\";\n    const rawResponse = await fetch(postUrl, {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(offer)//JSON.stringify({\"name\":\"adam\", \"action\":\"takephoto\", \"sign_data\":\"\"}) //JSON.stringify(offer)\n    });\n    const res = await rawResponse.json();\n    l(\"res:\" + res);\n}*/","import React,  {useContext, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport \"./css/navagation.css\"\nimport { Navbar, Nav } from 'react-bootstrap'\nimport {EthContext} from \"./EthContext.js\"\nimport { useTopAlert } from './useTopAlert'\nimport SmallLoadingBar from './SmallLoadingBar'\nimport {shortAddress} from './util'\n\n// import ReactLoading from 'react-loading';\n\n// export default Navigation = (props) => {\nexport default function Navigation() {\n    const [loginLoading, setLoginLoading] = useState(false);\n    const {ethLink, account} = useContext(EthContext);\n    const { hide, showMessage: showLoginFail, RenderTopAlert: LoginFail} = useTopAlert() \n    async function loginEth(){\n        // setShowError(false);\n        hide()\n        setLoginLoading(true);\n        try {\n            await ethLink.login();\n        } catch (e) {\n            console.log(\"loginEth(): \" + e.name + ': ' + e.message);\n            // alert(e.message);\n            showLoginFail(e.message);\n        }\n        setLoginLoading(false);\n    }\n\n    async function goContact(){\n        document.getElementById('contact-div').scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    // async function testSetNft(){\n    //     let nft = ethLink.getNft();\n    //     setNft(nft);\n    // }\n    \n    // console.log(\"in NAV!!\");\n    let loginHtml = [];\n    if (loginLoading){\n        loginHtml.push(<SmallLoadingBar key=\"login-loadingbar\" /> );\n    }else{\n        if (account!==''){\n            // console.log(\"in account!==''!!\");\n            let shortAddr = shortAddress(account);\n            // console.log(\"in account!==''!!\");\n            loginHtml.push(<Nav.Link key=\"login\">{shortAddr}</Nav.Link> );\n        }else{\n            loginHtml.push(<Nav.Link key=\"login\" onClick={() => loginEth() } >Login</Nav.Link> );\n        }\n    }\n\n\n    return (\n        <>\n        <Navbar collapseOnSelect expand=\"md\" bg=\"light\" style={{padding: '0.5rem 2.5rem'}} >\n        <Navbar.Brand as={Link} to=\"/\" style={{fontSize: '2rem'}}  >ethPlant.com</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"ml-auto\">\n                <Nav.Link key=\"home\" as={Link} to=\"/\" >Home</Nav.Link>\n                <Nav.Link key=\"contact\" onClick={() => goContact()} >Contact</Nav.Link>\n                {loginHtml}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <LoginFail />\n     </>\n    );\n};","import React from 'react';\nimport ReactLoading from 'react-loading';\nimport './css/LoadingBar.scss';\nexport default function LoadingBar(props){ \n    if (!props.show) return null;\n    return (\n        <div id=\"overlay\">\n            <div className=\"w-100 d-flex justify-content-center align-items-center\">\n                <ReactLoading type={\"bars\"} color={\"#fff\"} height={'20%'} width={'20%'} />\n            </div>\n        </div>\n        \n    );\n};","import React, { useState, useEffect } from 'react';\nconst l = console.log;\n\nexport const PlantFeature = (props) => {\n    const [feature, setFeature] = useState([]);\n    useEffect(() => {\n        // l(\"props.name:\" + props.name);\n        if (props.name!==\"\"){\n            fetchFeature(props.name)\n        }\n    }, [props.name]);\n\n    function fetchFeature(name) {\n        let jsonURL = \"/data/\" + name + \".json\";\n        fetch(jsonURL)\n        .then(res => res.json())\n        .then(\n            (result) => {\n                setFeature(result['features'])\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                l(\"jsonURL:\" + jsonURL);\n                l(\"fetchFeature error: \");\n                l(error);\n            }\n        )\n    }\n\n    let featureHtml = [];\n    let liKey=0;\n    for (const featureUnit of feature) {\n        liKey++;\n        featureHtml.push(<li key={liKey}>{featureUnit}</li>);\n    }\n\n    return(\n        <ul style={{\"paddingLeft\": \"0rem\"}}>\n            {featureHtml}\n        </ul>\n    )\n\n}","import React, { useState, useEffect } from 'react';\nimport { ethers } from \"ethers\";\n\nimport LoadingBar from './LoadingBar'\n// bootstrap\nimport Button from 'react-bootstrap/Button';\n// router\nimport {Link} from \"react-router-dom\";\n// fontawesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEye } from '@fortawesome/free-solid-svg-icons'\nimport { playRemote } from './util.js';\nimport { PlantFeature } from './PlantFeature';\nimport { EthContext } from \"./EthContext.js\";\nimport { useTopAlert } from './useTopAlert';\n//css\nimport './css/PlantGridUnit.scss';\n\nlibrary.add(faEye)\n\nconst l = console.log;\n\nconst PlantGridUnit = (props) => {\n    const [name, setName] = useState('');\n    const [owner, setOwner] = useState('0x');\n    const [price, setPrice] = useState(0);\n    const [listSell, setListSell] = useState(false);\n    const [listSellPrice, setListSellPrice] = useState(0);\n    const [changeRow, setChangeRow] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [pc, setPC] = useState(null);\n    const {nft, account} = React.useContext(EthContext);\n    const { showMessage: showFail, RenderTopAlert: ErrorBox} = useTopAlert() \n    let tokenId = props.id; // token id\n    // let nft = props.nft;\n    let videoId = name + \"Video\";\n    // l(\"in gridunit tokenId=\" + tokenId);\n\n    useEffect(() => {\n        l('in PlantGridUnit useEffect(), id:' +props.id);\n        if (nft===undefined){\n            return\n        }\n        nft.nftName(tokenId).then(nftName => {\n            setName(nftName);\n        });\n\n        nft.ownerOf(tokenId).then(own => {\n            setOwner(own);\n        });\n\n        nft.getSale(tokenId).then(price => {\n            setPrice(price);\n        });\n\n        // Update the document title using the browser API\n        return function cleanup() {\n        //   l('in PlantItem cleanup(), id:' +props.id);\n        };\n    }, [nft, tokenId, props.id]);\n\n    useEffect(() => {\n        return function cleanup() {\n            if (pc!==null && pc!==undefined){\n                pc.close();\n            }\n        };\n    }, [pc]);\n\n    useEffect(() => {\n        let get_pc = playRemote(name, videoId);\n        setPC(get_pc);\n    }, [name, videoId]);\n    \n    async function buyNFT() {\n        console.log(\"account:\" + account);\n        if (account===''){\n            showFail(\"Please login account first.\")\n            return\n        }\n        \n        setIsLoading(true);\n        try {\n            await nft.buy(tokenId, {value: price});\n        }catch (error) {   \n            console.log(\"Buy error:\" + error);\n            setIsLoading(false);\n        }  \n        await nft.once(\"NFTBuyEvent\", (i_tokenId) => {\n            l(\"in NFTBuyEvent\");\n            if (parseInt(i_tokenId)===tokenId){\n                nft.ownerOf(tokenId).then(own => {\n                    setOwner(own);\n                });\n                setIsLoading(false);\n            }\n        });\n        \n    }\n    \n    async function sellNFT() {\n        // try to ignore the event\n        await nft.once(\"NFTSellEvent\", (i_tokenId, price) => {\n            l(\"in NFTSellEvent FIRST:, i_tokenId:\" + i_tokenId + \", price:\" + price);\n        });\n\n        let priceWei = await ethers.utils.parseEther(listSellPrice.toString());\n        // l(\"Sell Price: \" + price+ \", priceWei:\" + priceWei);\n        setIsLoading(true);\n        try {\n            await nft.setForSale(tokenId, priceWei);\n        } catch (error) {   \n            console.log(\"Sale error:\" + error);\n            setListSell(false);\n            setChangeRow(false);\n            setIsLoading(false);\n        }\n\n        await nft.once(\"NFTSellEvent\", (i_tokenId, price) => {\n            l(\"in NFTSellEvent:, i_tokenId:\" + i_tokenId + \", price:\" + price);\n\n            if (parseInt(i_tokenId)===tokenId){\n                setPrice(price);\n                setListSell(false);\n                setChangeRow(false);\n                setIsLoading(false);\n            }\n        });\n        \n    }\n    \n    async function cancelSell() {\n        await nft.once(\"NFTSellEvent\", (i_tokenId, price) => {\n            l(\"in cancelSell NFTSellEvent FIRST:, i_tokenId:\" + i_tokenId + \", price:\" + price);\n        });\n        setIsLoading(true);\n\n        try {\n            await nft.cancelSale(tokenId);\n        }catch (error) {   \n            console.log(\"cancelSale error:\" + error);\n            setListSell(false);\n            setChangeRow(false);\n            setIsLoading(false);\n        }  \n        \n        await nft.once(\"NFTSellEvent\", (i_tokenId, price) => {\n            if (parseInt(i_tokenId)===tokenId){\n                setPrice(price);\n                setListSell(false);\n                setChangeRow(false);\n                setIsLoading(false);\n            }\n        });\n        \n    }\n\n    var priceHtml;\n    // l(\"unit id(%d) owener:%s, account:%s\", tokenId, owner, account);\n    // l(\" type(owener):%s, account:%s\", typeof(owner), typeof(account));\n    if (owner===account){\n        // ------------ the item belong owner ------------ //\n        if (listSell){\n            priceHtml = [\n                <div key=\"0\" className=\"row list-sell\"> \n                    <input type=\"number\" step=\"0.01\" min=\"0\" \n                           id=\"sellprice\" name=\"sellprice\" onChange={event => setListSellPrice(event.target.value)}/>\t\n                    <Button className=\"sellbtn\" variant=\"danger\" onClick={() => sellNFT(false)}>Sell</Button>          \n                    <Button className=\"close\" variant=\"secondary\" onClick={() => setListSell(false)}>X</Button>\n                </div>];\n\n        } else if (price > 0){\n            if (!changeRow){\n                let formattedBalance = ethers.utils.formatUnits(price, 18);\n                let ethHtml = \"Ξ \" + formattedBalance;\n                priceHtml = [<div key=\"0\" className=\"row\"> \n                                    <div className=\"col-5 price\">{ethHtml}</div>\n                                    <div className=\"col-7 price-btn\">\n                                        <Button variant=\"outline-warning\" onClick={() => setChangeRow(true)}>Change</Button>\n                                    </div>\n                            </div>];\n            }else{\n                priceHtml = [\n                    <div key=\"price-div\" className=\"row change-price-row\"> \n                        <Button key=\"price-btn\"  className=\"change-price\" variant=\"danger\" onClick={() => setListSell(true)}>Price</Button>          \n                        <Button key=\"revoke-btn\"  className=\"revoke-sale\" variant=\"secondary\" onClick={() => cancelSell()}>Revoke</Button>\n                        <Button key=\"x-btn\"  className=\"close\" variant=\"secondary\" onClick={() => setChangeRow(false)}>X</Button>\n                    </div>];\n            }\n        }else{\n            // l(\"in owner==account else, should price <= 0\");\n            priceHtml = [<div key=\"0\" className=\"row\"> \n                            <div className=\"col-5 price\">No Sale</div>\n                            <div className=\"col-7 price-btn\">\n                                <Button variant=\"outline-danger\" onClick={() => setListSell(true)}>List Sell</Button>\n                            </div>\n                        </div>];\n            \n        }\n    }else{\n        // ------------ the item is NOT belong owner ------------ //\n        if (price > 0){\n            let formattedBalance = ethers.utils.formatUnits(price, 18);\n            let ethHtml = \"Ξ \" + formattedBalance;\n            priceHtml = [<div key=\"0\" className=\"row\"> \n                                <div className=\"col-5 price\">{ethHtml}</div>\n                                <div className=\"col-7 buy-btn-row\">\n                                    <Button variant=\"success\" onClick={async () => {await buyNFT();} }>Buy</Button>\n                                </div>\n                        </div>];\n        \n        }else{\n            priceHtml = \"No Sale\";\n        }\n    }\n    const plantPath = \"/@\" +name;\n   \n    return (\n\n    <div className=\"col-md-4 col-sm-6 plant-grid-unit\">\n        <LoadingBar show={isLoading} />\n        <ErrorBox />\n        <div className=\"item\">\n            <div className=\"title\">{name}</div>\n            <div id={videoId} className=\"imgbox\">\n                {/* <img src={props.img} alt=\"\" />   */}\n            </div>\n            {/* <div className=\"lookit\" onClick={() => props.parent(tokenId)}><FontAwesomeIcon icon={[\"fas\", \"eye\"]} /> <b className=\"fakehref\">Look it!</b></div> */}\n            <div className=\"lookit-div\"><Link className=\"lookit\" to={plantPath}><FontAwesomeIcon icon={[\"fas\", \"eye\"]} /> <b className=\"fakehref\">Look it!</b></Link></div>\n            <div className=\"row\">\n                <div className=\"col-4 col-name\">Owner</div>\n                <div className=\"col-8\">{owner.substring(0,6) + \"...\" + owner.substring(owner.length-4, owner.length)}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-4 col-name\">Feature</div>\n                <div className=\"col-8\">\n                    <PlantFeature name={name} />\n                </div>\n            </div>\n            <div className=\"row price-row\">\n                <div className=\"col-4 col-name\">Price</div>\n                <div className=\"col-8\">\n                    {priceHtml}\n                </div>\n            </div>\n        </div>\n    </div>\n    );\n};\n\nexport default PlantGridUnit;","import React from 'react';\nimport './css/PageTail.scss';\nexport default function LoadingMessage(props){ \n    if (!props.show){return null;}\n    return(\n        <div className=\"loading-message\">\n            {/* <ReactLoading type={\"bars\"} color={\"#ccc\"} height={'20%'} width={'20%'} /> */}\n            <img src=\"loading-bars.svg\" height='30%' width='30%' alt=\"loading-bar\" />\n            <h2>{props.message}</h2>        \n        </div>\n    )\n};","import React, { useState, useEffect } from 'react';\nimport PlantGridUnit from \"./PlantGridUnit\"\nimport {EthContext} from \"./EthContext.js\";\n//css\nimport './css/LoadingMessage.scss';\nimport LoadingMessage from './LoadingMessage';\nimport { GetEthNetName } from './config';\nconst l = console.log;\n\nconst PlantGrid = (props) => {\n    const [totalSupply, setTotalSupply] = useState(0);\n    const {nft} = React.useContext(EthContext);\n    // const nft = ethCxt.getNft();\n    // let account = props.account;\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(() => {\n        l('in PlantGrid useEffect(), nft:', nft);\n        // if (nft!==undefined){\n        //     l('in PlantGrid useEffect(), nft.totalSupply():', nft.totalSupply());\n        // }\n        \n        if (nft!=null){\n            nft.totalSupply().then(totalSupply => {\n                l(\"totalSupply:\" , totalSupply);\n                setTotalSupply(totalSupply);\n            });\n        }\n        // Update the document title using the browser API\n        return function cleanup() {\n          l('in useEffect cleanup()');\n        };\n    }, [nft]);\n\n    // console.log(\"in PlantGrid!!\");\n    const childCall = (tokenId) => {\n        l(\"PlantGrid childcall tokenId:\" + tokenId);\n    };\n    // l(\"grid, account:%s\", account);\n    var i;\n    const items = [];\n    for (i = 0; i < totalSupply; i++) {\n        items.push(<PlantGridUnit key={i} id={i} parent={childCall} />);\n    }\n    if (items.length<=0){\n        const msg = `Connect to Ethereum ${GetEthNetName()} ...`\n        items.push( <LoadingMessage key=\"loading-ethereum\" show={true} message={msg} />);\n    }\n   \n\n    return(\n        <div className=\"row gallery\">\n            {items}\n        </div>\n    );\n};\n\nexport default PlantGrid;\n","export function ts2time(unixTs){\n  var date = new Date(unixTs * 1000);\n\n  var hours = \"0\" +date.getHours();\n  var minutes = \"0\" + date.getMinutes();\n  var seconds = \"0\" + date.getSeconds();\n  \n  return `${hours.substr(-2)}:${minutes.substr(-2)}:${seconds.substr(-2)}`;\n\n}\n\nexport function ts2date(unixTs){\n    var date = new Date(unixTs * 1000);\n  \n    var mon = \"0\" + (date.getMonth()+1);\n    var day = \"0\" + date.getDate();\n    return `${date.getFullYear()}-${mon.substr(-2)}-${day.substr(-2)}`;\n}\n\nexport function ts2datetime(unixTs, timezone=false){\n    let datetime = `${ts2date(unixTs)} ${ts2time(unixTs)}`;\n    datetime = timezone ? datetime + ` (${Intl.DateTimeFormat().resolvedOptions().timeZone})` : datetime;\n    return datetime;\n}\n// let ts = 1603163299;\n// console.log(ts2date(ts));\n// console.log(ts2datetime(ts));\n// console.log(ts2(1549312452));\n// console.log(date.toString());","import React, { useState, useEffect } from 'react';\nimport './css/OverlayPhoto.css';\n// const l = console.log;\n// export default function OverlayPhoto(props){ \n// const OverlayPhoto = (props, ref) => {\nconst OverlayPhoto = (props) => {\n    const [current, setCurrent] = useState(\"\");\n\n    useEffect(() => {\n        setCurrent(props.current);\n    }, [props]);\n    if (!props.show) return null;\n    let preHtml = props.handlePrevious!=null ? \n                <div className=\"overlay-arrow\" onClick={props.handlePrevious} ><h1>&lt;</h1></div> : \n                <div className=\"overlay-arrow\" /> ;\n    let nextHtml = props.handleNext!=null ? \n                <div className=\"overlay-arrow\" onClick={props.handleNext} ><h1>&gt;</h1></div> : \n                <div className=\"overlay-arrow\" /> ;\n     \n    return(\n        <div id=\"myNav\" className=\"overlay\">\n            <h1 className=\"closebtn\" onClick={props.handleClose}>&times;</h1>\n            {/* <div className=\"closebtn\" onClick={props.handleClose}>&times;</div> */}\n            <div className=\"overlay-content\">\n                {preHtml}\n                <div className=\"overlay-photo\">\n                    <img alt={props.description}  src={current} />\n                    <div className=\"date\">{props.description}</div>\n                </div>\n                {nextHtml}\n            </div>\n        </div>\n    );\n};\n\n\nexport default OverlayPhoto;\n","import React, { useState, useEffect, useImperativeHandle } from 'react';\n// util\nimport { ts2date, ts2datetime } from './ts.js';\nimport {VideoPrefix, VideoServer} from \"./config.js\" \nimport './css/Album.scss';\nimport OverlayPhoto from \"./OverlayPhoto.js\"\nimport { scrollToTargetAdjusted } from './util.js';\n\nconst l = console.log;\n\nvar prefix = \"\";\nvar suffix = \"\";\n// const Album =  forwardRef((props, ref) => {\nvar Album = React.forwardRef((props, ref) => {\n    const [photoTsAry, setPhotoTsAry] = useState([]);\n    const [, setUpdateTs] = useState();\n    const [showOverlayPhoto, setShowOverlayPhoto] = useState(false);\n    const [photoCurrentTs, setPhotoCurrentTs] = useState(0);\n    const [foucusImgId, setFocusImgId] = useState(\"\");\n\n    const takePhotoUpdate = (imgTs) => {\n        setUpdateTs(Date.now());\n        setFocusImgId(imgTs);\n    };\n    let { name } = props;\n\n    useEffect(() => {\n        // l('in album useEffect(), name=', name);\n        fetchPhotoList(name);\n        return function cleanup() {\n          l('in Album(%s) cleanup()', name);\n        };\n    }, [name]);\n\n    useEffect(() => {\n        console.log(\"useEffect foucusImgId!\")\n        if (foucusImgId!==\"\"){\n            // const element = document.getElementById(foucusImgId);\n            // element.scrollIntoView({behavior: 'smooth'});\n            scrollToTargetAdjusted(foucusImgId);\n        }\n    }, [foucusImgId]);\n\n    useImperativeHandle(ref, () => ({\n\n        addPhoto: (newPhoto) => {\n            if (!newPhoto['success']){\n                console.error(\"Add photo error, err:\" + newPhoto['detail']);\n                return ;\n            }\n\n            let fSplit = newPhoto['detail'].split('.');\n            let ts = parseInt(fSplit[0]);\n            let dateStr = ts2date(ts);\n            if (!photoTsAry.hasOwnProperty(dateStr)){\n                photoTsAry[dateStr] = [];\n            }\n            \n            const newArray = [ts].concat(photoTsAry);\n            setPhotoTsAry(newArray);\n            return {\n                cleanValue: takePhotoUpdate(ts)\n            }\n        }\n    \n    }));\n\n    function fetchPhotoList(name) {\n        fetch(VideoPrefix + name + \"/photo/list\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                if (result['photos']==null|| result['photos'].length <=0){\n                    return;\n                }\n                suffix = result['photos'][0].split('.')[1];\n                prefix = result['prefix'];\n                let  tsAry = [];\n                for (const f of result['photos']) {\n                    let fSplit = f.split('.');\n                    let ts = parseInt(fSplit[0]);\n                    tsAry.push(ts);\n                }\n                // descending\n                tsAry.sort(function(a, b){return b-a});\n                setPhotoTsAry(tsAry);\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                // setIsLoaded(true);\n                // setError(error);\n                l(error);\n            }\n        )\n    }\n\n    function showPhoto(phototTs){\n        setPhotoCurrentTs(phototTs);\n        setShowOverlayPhoto(true);\n    }\n\n    // array to map\n    let tmpDatePhotoDic = {};\n    let preDate = \"\";\n    var datePhotoAry = NaN;\n    for (let i = 0; i < photoTsAry.length; i++) {\n        let ts = photoTsAry[i];\n        let dateStr = ts2date(ts);\n        // l(dateStr);\n        if (dateStr!==preDate){\n            datePhotoAry = [];//new Array();\n            // tmpDatePhotoDic.set(dateStr, datePhotoAry);\n            tmpDatePhotoDic[dateStr] = datePhotoAry;\n            preDate = dateStr;\n        }\n        // let photoUrl = prefix + String(ts) + \".\" + suffix;\n        datePhotoAry.push(ts);\n    }\n\n    // prepare datePhotosHtml\n    let datePhotosHtml = [];\n    for (var dateStr in tmpDatePhotoDic) {\n        datePhotosHtml.push( <div key={dateStr} className=\"caption\">{dateStr}</div>)\n        \n        for (const ts of tmpDatePhotoDic[dateStr]) {\n            // console.log(dateStr + \" -> \" + url);\n            let photoUrl = VideoServer + prefix + String(ts) + \".\" + suffix;\n            datePhotosHtml.push( <img id={ts} key={ts} alt={name+\"_\"+ts} className=\"photo\" src={photoUrl} onClick={() => showPhoto(ts)}  />)\n        }\n    }\n\n    // for OverlayPhoto\n    let photoCurrentTsIdx = photoCurrentTs > 0 ? photoTsAry.indexOf(photoCurrentTs):0;\n    let description= photoCurrentTs > 0 ? ts2datetime(photoCurrentTs, true) : \"\";\n    let currentUrl = photoCurrentTs > 0 ? (VideoServer + prefix + String(photoCurrentTs) + \".\" + suffix)  : \"\";\n    let preFunc = (photoCurrentTsIdx>0) ?  () => showPhoto( photoTsAry[photoCurrentTsIdx-1] )  : null;\n    let nextFunc = (photoCurrentTsIdx < (photoTsAry.length-1))  ?  () => showPhoto(photoTsAry[photoCurrentTsIdx+1] )  : null;\n    return (\n        <>\n        <div className=\"album\"> {datePhotosHtml} </div>\n        <OverlayPhoto show={showOverlayPhoto} handleClose={() => setShowOverlayPhoto(false)}\n                    current={currentUrl}\n                    handlePrevious={preFunc} \n                    handleNext={nextFunc}\n                    description={description} />\n        </>\n    )\n});\nAlbum.displayName = 'Album';\nexport default Album;","import React, { useState } from 'react';\nimport {makeStyles } from \"@material-ui/core/styles\";\n\nimport Slider from \"@material-ui/core/Slider\";\nimport Button from \"@material-ui/core/Button\";\n\nimport './css/ControlPanel.scss';\nimport './css/Switch.scss';\n\nconst FanPowerDefault = 50;\nconst FanDurationDefault = 10;\nconst LEDOnDefault = false;\nconst LEDBrightnessDefault = 50;\nconst PumpDurationDefault = 10;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\"\n    },\n    margin: {\n      height: theme.spacing(3)\n    }\n}));\n  \nconst powerMarks = [{\n    value: 0,\n    label: \"0%\"\n},{\n    value: 50,\n    label: \"50%\"\n},{\n    value: 100,\n    label: \"100%\"\n}];\n\nconst durationMarks = [{\n    value: 5,\n    label: \"5 sec\"\n},{\n    value: 10,\n    label: \"10 sec\"\n},{\n    value: 15,\n    label: \"15 sec\"\n}];\n\nconst ControlPanel = (props) => {\n    const classes = useStyles();\n    const [fanPower, setFanPower] = useState(FanPowerDefault);\n    const [fanDuration, setFanDuration] = useState(FanDurationDefault);\n    const [ledBrightness, setLEDBrightness] = useState(LEDBrightnessDefault);\n    const [ledOn, setLEDOn] = useState(LEDOnDefault);\n    const [pumpDuration, setPumpDuration] = useState(PumpDurationDefault);\n    // const fanRef = useRef();\n\n    async function sendFan() {\n        console.log(\"power:\" + fanPower +\", duration:\" + fanDuration);\n        let detail = JSON.stringify({\"power\": fanPower, \"duration\": fanDuration });\n        props.controlHandle(\"fan\", detail);\n    }\n\n    async function sendLED() {\n        console.log(\"ledOn:\" + ledOn + \", brightness:\" + ledBrightness);\n        let detail = JSON.stringify({\"brightness\": ledBrightness, \"on\": ledOn });\n        props.controlHandle(\"led\", detail);\n    }\n\n    async function sendPump() {\n        console.log(\"pump duration:\" + pumpDuration);\n        let detail = JSON.stringify({\"duration\": pumpDuration });\n        props.controlHandle(\"pump\", detail);\n    }\n\n    return(\n        <div id=\"watering-div\">\n        {/*---------------FAN---------------*/}\n        <div className=\"row\">\n            <div className=\"col-3 col-md-2 col-name\">Fan</div>\n            <div className=\"col-9 col-md-10\">\n                <div className=\"row\">\n                    <div className=\"col-10 col-md-8\">\n                        <Slider\n                            defaultValue={FanPowerDefault}\n                            aria-labelledby=\"discrete-slider-always\"\n                            marks={powerMarks}\n                            valueLabelDisplay=\"auto\"\n                            onChange={(event, newValue)=>{setFanPower(Number(newValue));}}\n                        />\n                        <Slider    min={5} max={15}\n                            defaultValue={FanDurationDefault}\n                            aria-labelledby=\"discrete-slider-always\"\n                            marks={durationMarks}\n                            valueLabelDisplay=\"auto\"\n                            onChange={(event, newValue)=>{setFanDuration(Number(newValue));}}\n                        />\n                    </div>\n                    <div className=\"col-6 col-md-2 flex-center\">{3} PLT</div>\n                    <div className=\"col-6 col-md-2 flex-center\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={() => { sendFan(); }}\n                        >Send</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        {/*--------------- Light ---------------*/}\n        <div className=\"row\">\n            <div className=\"col-3 col-md-2 col-name\">Light</div>\n            <div className=\"col-9 col-md-10\">\n                <div className=\"row\">\n                    <div className=\"col-4 col-md-2\">\n                        <label className=\"switch\">\n                            <input type=\"checkbox\" checked={ledOn} onChange={ (e) => {\n                                console.log(\"e.target.checked:\"+e.target.checked);\n                                setLEDOn(e.target.checked)\n                            }}/>\n                            <span className=\"slider\" />\n                        </label>\n                    </div>\n                    { ledOn ? (\n                        <div className=\"col-10 col-md-6\">\n                            <Slider\n                                defaultValue={LEDBrightnessDefault}\n                                aria-labelledby=\"discrete-slider-always\"\n                                marks={powerMarks}\n                                valueLabelDisplay=\"auto\"\n                                onChange={(event, newValue)=>{setLEDBrightness(Number(newValue));}}\n                            />\n                        </div> ): \"\"\n                     }\n                    <div className=\"col-3 col-md-2 flex-center\">{3} PLT</div>\n                    <div className=\"col-4 col-md-2 flex-center\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={() => { sendLED(); }}\n                        >Send</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        {/*---------------Pump---------------*/}\n        <div className=\"row\">\n            <div className=\"col-3 col-md-2 col-name\">Watering</div>\n            <div className=\"col-9 col-md-10\">\n                <div className=\"row\">\n                    <div className=\"col-10 col-md-8\">\n                        <Slider    min={5} max={15}\n                            defaultValue={PumpDurationDefault}\n                            aria-labelledby=\"discrete-slider-always\"\n                            marks={durationMarks}\n                            valueLabelDisplay=\"auto\"\n                            onChange={(event, newValue)=>{setPumpDuration(Number(newValue));}}\n                        />\n                    </div>\n                    <div className=\"col-6 col-md-2 flex-center\">{100} PLT</div>\n                    <div className=\"col-6 col-md-2 flex-center\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={() => { sendPump(); }}\n                        >Send</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n    );\n};\n\nexport default ControlPanel;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {useParams} from \"react-router-dom\";\nimport LoadingBar from './LoadingBar'\nimport Album from './Album';\n// fontawesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCamera, faWater } from '@fortawesome/free-solid-svg-icons'\nimport { playRemote } from './util.js';\nimport { VideoPrefix } from \"./config.js\"; \nimport { EthContext } from \"./EthContext.js\";\nimport { PlantFeature } from './PlantFeature';\nimport { useTopAlert } from './useTopAlert'\nimport ControlPanel from './ControlPanel';\n\nlibrary.add(faCamera)\nlibrary.add(faWater)\n\nconst l = console.log;\n\nconst Plant = (props) => {\n    // react\n    const [tokenId, setTokenId] = useState(-1);\n    const [owner, setOwner] = useState('0x');\n    const [isLoading, setIsLoading] = useState(false);\n    const [pc, setPC] = useState(null);\n    const albumRef = useRef();\n    const {nft, account, ethLink} = React.useContext(EthContext);\n    // react-router\n    let { name } = useParams();\n    const { showMessage: showFail, RenderTopAlert: ErrorBox} = useTopAlert() \n    \n    let  videoId = name + \"Video\";\n    useEffect(() => {\n        // l('in useEffect(), nft:' +nft);\n        if (nft!=null){\n            nft.nftID(name).then(nftId => {\n                setTokenId(nftId);\n                nft.ownerOf(nftId).then(own => {\n                    setOwner(own);\n                });\n            });\n        }\n        \n        return function cleanup() {\n          l('in Plant(%d) cleanup(), name:', name);\n        };\n    }, [nft, name]);\n\n    useEffect(() => {\n        return function cleanup() {\n            if (pc!==null && pc!==undefined){\n                pc.close();\n            }     \n        };\n    }, [pc]);\n\n    useEffect(() => {\n        let get_pc = playRemote(name, videoId);\n        setPC(get_pc);\n    }, [name, videoId]);\n\n    // useEffect(() => {\n    //     document.title = `[${name}] ethPlant.com`;\n    // }, [name]);\n\n    async function takePhoto() {\n        // scrollToTargetAdjusted(\"1605016746\");\n        //  return\n        if (ethLink.signer===null || ethLink.signer===undefined){\n            showFail(\"Please login account first.\")\n            return\n        }\n        if (tokenId < 0){\n            showFail(\"tokenId NOT ready.\")\n            return\n        }\n        if(account!==owner){\n            showFail(\"You are not owner!\")\n            return\n        }\n        setIsLoading(true);\n        \n        let snapshotSign = await ethLink.signer.signMessage(\"snapshot\");\n        // l(\"snapshotSign: \"+ snapshotSign);\n        const postUrl = VideoPrefix + name + \"/photo/take\";\n        const rawResponse = await fetch(postUrl, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\"action\":\"takephoto\", \"sign_data\":snapshotSign })\n        });\n        const res = await rawResponse.json();\n        console.log(\"takephoto res: \");\n        console.log(res);\n        if (res[\"success\"]===true){\n            let albumResult = albumRef.current.addPhoto(res);\n            console.log(\"albumResult:\");\n            console.log(albumResult);\n        }else{\n            showFail(res[\"detail\"]);\n        }\n        setIsLoading(false);\n\n    }\n\n    async function sendControl(controlType, detail) {\n        console.log(`in sendControl(${controlType}, ${detail})`)\n        setIsLoading(true);\n        const postUrl = VideoPrefix + name + \"/control\";\n        const rawResponse = await fetch(postUrl, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\"action\":controlType, \"detail\": detail, \"sign_data\":\"\" })\n        });\n        const res = await rawResponse.json();\n        console.log(\"sendControl res: \");\n        console.log(res);\n        if (res[\"success\"]===false){\n            showFail(res[\"detail\"]);\n        }\n        setIsLoading(false);\n    }\n\n    async function goWateringArea(){\n        document.getElementById('watering-div').scrollIntoView({ behavior: 'smooth', block: 'end' })\n    }\n    \n    return (\n        \n        <div className=\"row gallery\">\n            <ErrorBox />\n            <div className=\"col-md-1 col-sm-0\" />\n            <div className=\"col-md-10 col-sm-12\">\n                <LoadingBar show={isLoading} />\n                <div className=\"item\">\n                    <div className=\"title\">{name}</div>\n                    <div id={videoId} className=\"imgbox imgbox-169\"> \n                        {/* <img src={props.img} alt=\"\" />   */}\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <div className=\"plant-cmd-click\" onClick={() => goWateringArea()}><FontAwesomeIcon icon={[\"fas\", \"water\"]} /> <b className=\"fakehref\">Watering</b></div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"plant-cmd-click\" onClick={() => takePhoto()}><FontAwesomeIcon icon={[\"fas\", \"camera\"]} /> <b className=\"fakehref\">Take Picture</b></div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-3 col-lg-2 col-name\">Owner</div>\n                        <div className=\"col-8 col-lg-10\">{owner.substring(0,6) + \"...\" + owner.substring(owner.length-4, owner.length)}</div>\n                    </div>\n                    <ControlPanel controlHandle={sendControl} />\n                    <div className=\"row\">\n                        <div className=\"col-3 col-lg-2 col-name\">Feature</div>\n                        <div className=\"col-8 col-lg-10\">\n                            <PlantFeature name={name} />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-3 col-lg-2 col-name\">Album</div>\n                        <div className=\"col-9 col-lg-10\">\n                            <Album name={name} ref={albumRef}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-md-1 col-sm-0\" />\n        </div>\n\n    );\n\n};\n\nexport default Plant;\n","import React from 'react';\nimport './css/PageTail.scss';\nexport default function PageTail(){ \n    return(\n        <>\n        <hr/>\n        <div id=\"contact-div\" className=\"contactBottom\">\n            <a href=\"https://discord.gg/qcn4rka3n7\" rel=\"noopener noreferrer\" target=\"_blank\"><img src=\"/discord_128.png\" alt=\"ethplant's discord\"/></a>\n            <a href=\"https://twitter.com/ethplant\" rel=\"noopener noreferrer\" target=\"_blank\"><img src=\"/twitter_128.png\" alt=\"ethplant's twitter\"/></a>\n        </div>\n        <div className=\"copyright\">© 2020 ethplant.com</div>\n        </>\n    )\n};","import { useEffect} from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport TagManager from 'react-gtm-module'\n\nconst usePageTracking = () => {\n  const location = useLocation();\n\n//   useEffect(() => {\n//     console.log(\"in usePageTracking: INIT\");\n//     ReactGA.initialize(\"G-DBYXR3NDZN\");\n// }, []);\n\n    useEffect(() => {\n        console.log(\"in usePageTracking TagManager: \" + location.pathname + location.search);\n        const tagManagerArgs = {\n            dataLayer: {\n                page: location.pathname + location.search\n            },\n            dataLayerName: 'PageDataLayer'\n        }\n        TagManager.dataLayer(tagManagerArgs)\n    }, [location]);\n};\n\nexport default usePageTracking;","import React, {useState, useEffect} from 'react';\nimport Navigation from \"./Navigation\"\nimport './css/app.scss';\nimport {\n    Switch,\n    Route  \n} from \"react-router-dom\";\nimport PlantGrid from \"./PlantGrid\"\nimport Plant from \"./Plant\"\nimport PageTail from \"./PageTail\"\nimport usePageTracking from \"./usePageTracking.js\"\nimport {ethLink, EthContext} from \"./EthContext.js\"\n// const l = console.log;\n\nfunction App() {\n    const [nft, setNft] = useState(ethLink.setNft);\n    const [account, setAccount] = useState(ethLink.account);\n    // const msgCxt = useContext(MsgBoxContext);\n    usePageTracking();\n    useEffect(() => {\n        ethLink.initEth(setAccount, setNft);\n    }, []);\n\n    // l(\"in App\")\n  \n    return (\n        <div className=\"app\">\n        \n            <div id='top-alert' />\n            <EthContext.Provider\n                value={{ nft, setNft, account, setAccount, ethLink }}>\n                <Navigation />\n                <div className=\"container\">    \n                    <Switch>\n                        <Route exact path=\"/\">\n                            <PlantGrid  />\n                        </Route>\n                        <Route path=\"/@:name\" children={<Plant />} />      \n                    </Switch>\n                </div>\n            </EthContext.Provider>\n            <PageTail />\n        </div>\n);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {  BrowserRouter as Router} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport TagManager from 'react-gtm-module';\n \nconst tagManagerArgs = {\n    gtmId: 'GTM-WJDZSX6'\n}\n \nTagManager.initialize(tagManagerArgs);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL} >\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}